/*
 Copyright(c) 1996-1998
 IPA, ETL, AT21, FSIABC, FXIS, InArc, MRI, NUL, SBC, Sharp, TEC, TIS

 著作権者は全ての権利を保留します。
 本ソフトウェア及びその関連ドキュメントは情報処理振興事業協会 (IPA) が
 実施した「創造的ソフトウェア育成事業」の成果です。

 本ソフトウェア及びその関連ドキュメントを利用、複製、変更、配布する場合
 は、本ソフトウェアのトップディレクトリにあるファイル「COPYRIGHT.JP」に
 記載されている利用許諾条件に従って下さい。

 但し、本リリースに含まれる CUP は Graphics Visualization and Usability 
 Center と College of Computing at Georgia Tech に所属する Scott Hudson 
 さんによって作成されたものです。
 (URL: http://www.cc.gatech.edu/gvu/people/Faculty/hudson/java_cup/home.html)
 */

	    OZ システム, 第 1 版リリースノート


この文書は、 OZ システムとは何であるか、どのような構成により成り立っている
か、および今回のリリースの性格を述べるものである。

１. OZ とは

OZ は、情報（データ）のみならず、ソフトウェア（プログラム）やサービス（サー
バの提供する機能）をネットワーク上で発信・共有・流通することにより、ワール
ドワイドに分散した利用者や計算機がソフトウェアを共有・再利用できるようにし、
拡張・改良されたソフトウェアがネットワーク上に環流するようなシステムである。
プログラマは、ネットワーク上のソフトウェアを部品として利用することによって
プログラムの開発が容易となり、拡張・改良したソフトウェアを部品として再度ネ
ットワーク上に環流することでソフトウェアが共有され、流通してゆく。
また、ソフトウェアが多くのプログラマによって、いろいろな応用に利用される事
により、バグの発見やプログラムの改良がなされ、ネットワーク上のソフトウェア
の品質が次第に向上することが期待される。

２. OZ システムの構成

本システムは、以下のような構成から成る。以下は最終的な構成であり、本リリー
スでは、一部のみの実装となっている。

  (1) 分散オブジェクト指向言語実行機構
      単一ノード上で、翻訳された OZ 言語を実行する機構。
      OS や実装言語の機能を上位層に提供する役割を担っている。
      外部から入ってきた危険なコードが、実行機構を破壊しないためのセキュリ
      ティ機能を有する。
  (2) オブジェクト共有交換機構
      分散環境上でオブジェクトの共有・交換を実現する機構。
      外部から入ってきたオブジェクト、プロセスなどにマーキングし、区別する
      セキュリティ機能を有する。また、 WAN から LAN まで、ネットワークのス
      ケールによらず、同じ手段でオブジェクトを共有・交換できるスケーラビリ
      ティを有する。
  (3) 分散オブジェクト指向言語翻訳機構
      OZ 言語を、分散オブジェクト指向言語実行機構が解釈可能な言語に翻訳する。
      ネットワーク上でオブジェクトを共有・交換する言語機能は、オブジェクト
      共有交換機構の機能を用いて実現するように翻訳する。その際、配送先での
      安全性のチェックが可能なセキュアなバイトコードに変換する。
  (4) 分散オブジェクト管理系
      OZ のオブジェクトの基本的な動作をサポートするためのオブジェクト群であ
      る。オブジェクトの通信アドレスの解決、クラスの蓄積/配送、認証サービス、
      およびトレーディングサービスが提供される。
  (5) 分散システム開発環境
      分散環境に公開され、共有されるようなソフトウェア部品 (コンポーネント)
      を開発するための環境。
      グローバルな環境での開発にもスケールするように、クラス名空間の衝突を
      避けるスクール機構を導入する。
      また、広く公開される部品では、バージョンが適切に管理されることが重要
      であり、新しいバージョンを既存のコードと併用して問題ないかどうか、新
      しいバージョンを既存のインスタンスに適用して問題ないかどうかを意識し
      た開発を促す仕組みを有する。
  (6) OZ クラスライブラリ
      OZ クラスライブラリは、それぞれある機能を持ったクラスライブラリの集合
      体である。それらの中には、コレクション機能、 GUI 機能などの基本的な機
      能、実行機構が提供するランタイムサービスを OZ 言語に対してライブラリ
      化して提供するラッピング機能、および、セキュアかつスケーラブルでフレ
      クシブルな分散システムの構築に用いられる、ネーミング機能、セキュリテ
      ィ機能、トランザクション管理機能、複製機能などが含まれる。
  (7) 分散アプリケーション管理
      個々のオブジェクトではなく、ある一定の範囲を持つ環境を単位として構築
      される分散システム全体を管理するための管理システムが提供される。
      管理の単位は大小さまざまにわたるので、各管理単位に適した管理方法を採
      用できるスケーラビリティを持つ。セキュリティの管理方針も管理単位ごと
      に定められる。また、オブジェクトをシステムから切り離したり再接続した
      りしても適切に動作するようなフレクシブルな管理が実現される。
  (8) 既存環境インタフェース
      インタネット上の既存のネットワークサービスを利用するための機能群であ
      る。

３. このリリースについて

このリリースには以下の内容が含まれている。

  ・エグゼキュータ
  ・OZ コンパイラ
  ・OZ 開発環境
  ・OZ ランチャ
  ・OZ クラス配送機構
  ・OZ 分散管理オブジェクト
  ・OZ アプリケーション
  ・OZ クラスライブラリ
  ・既存環境インタフェース

本リリースには OZ のサンプルプログラムが含まれており、OZ 開発環境からのコン
パイル、実行が体験できる。詳しくは、ディレクトリ docs/html の下の HTML で記
述された OZ 開発環境のマニュアルを参照。

４. 問題点

Solaris のウインドウシステムは X11R6 ではコアダンプする場合がある。
原因はよくわかっていない。
Open Windows, CDE では正常に動作している。

Solaris でのグラフィック系のライブラリには問題があり、
しばしば描画が正確に行われないことがある。
ウインドウをリサイズするなどして再描画イベントを起こすと
正しく描画されることがある。

OZ システムは Java を利用しているが、
Verify エラーがしばしば発生する。
そのため OZ では -noverify オプションを与えて起動するようになっている。

